{
  "description": "Abstract Components Overview and Relationships",
  "components": [
    {
      "name": "BaseConnector",
      "description": "The abstract base class that defines a standardized interface for all communication protocols. It provides the fundamental methods for sending and receiving data, acting as the primary abstraction for low-level communication.",
      "referenced_source_code": [
        {
          "qualified_name": "mcp_use.connectors.base.BaseConnector",
          "reference_file": "/mnt/e/StartUp/mcp-use/mcp_use/connectors/base.py",
          "reference_start_line": 0,
          "reference_end_line": 0
        }
      ]
    },
    {
      "name": "Concrete Connectors",
      "description": "These classes are concrete implementations of `BaseConnector`, each handling the specifics of a particular communication protocol (e.g., WebSocket, HTTP, Standard I/O, Sandbox environment). They encapsulate the protocol-specific logic for data exchange.",
      "referenced_source_code": [
        {
          "qualified_name": "mcp_use.connectors.websocket.WebSocketConnector",
          "reference_file": "/mnt/e/StartUp/mcp-use/mcp_use/connectors/websocket.py",
          "reference_start_line": 0,
          "reference_end_line": 0
        },
        {
          "qualified_name": "mcp_use.connectors.http.HttpConnector",
          "reference_file": "/mnt/e/StartUp/mcp-use/mcp_use/connectors/http.py",
          "reference_start_line": 0,
          "reference_end_line": 0
        },
        {
          "qualified_name": "mcp_use.connectors.stdio.StdioConnector",
          "reference_file": "/mnt/e/StartUp/mcp-use/mcp_use/connectors/stdio.py",
          "reference_start_line": 0,
          "reference_end_line": 0
        },
        {
          "qualified_name": "mcp_use.connectors.sandbox.SandboxConnector",
          "reference_file": "/mnt/e/StartUp/mcp-use/mcp_use/connectors/sandbox.py",
          "reference_start_line": 0,
          "reference_end_line": 0
        }
      ]
    },
    {
      "name": "ConnectionManager",
      "description": "The abstract base class for managing the lifecycle of connections. It defines the interface for handling asynchronous operations, maintaining persistent connections, and ensuring non-blocking I/O for various communication channels.",
      "referenced_source_code": [
        {
          "qualified_name": "mcp_use.task_managers.base.ConnectionManager",
          "reference_file": "/mnt/e/StartUp/mcp-use/mcp_use/task_managers/base.py",
          "reference_start_line": 0,
          "reference_end_line": 0
        }
      ]
    },
    {
      "name": "Concrete Connection Managers",
      "description": "These classes are concrete implementations of `ConnectionManager`, each tailored to manage connections for specific protocols. They utilize the corresponding `Connector` implementations to perform their tasks.",
      "referenced_source_code": [
        {
          "qualified_name": "mcp_use.task_managers.websocket.WebSocketConnectionManager",
          "reference_file": "/mnt/e/StartUp/mcp-use/mcp_use/task_managers/websocket.py",
          "reference_start_line": 0,
          "reference_end_line": 0
        },
        {
          "qualified_name": "mcp_use.task_managers.stdio.StdioConnectionManager",
          "reference_file": "/mnt/e/StartUp/mcp-use/mcp_use/task_managers/stdio.py",
          "reference_start_line": 0,
          "reference_end_line": 0
        },
        {
          "qualified_name": "mcp_use.task_managers.sse.SseConnectionManager",
          "reference_file": "/mnt/e/StartUp/mcp-use/mcp_use/task_managers/sse.py",
          "reference_start_line": 0,
          "reference_end_line": 0
        },
        {
          "qualified_name": "mcp_use.task_managers.streamable_http.StreamableHttpConnectionManager",
          "reference_file": "/mnt/e/StartUp/mcp-use/mcp_use/task_managers/streamable_http.py",
          "reference_start_line": 0,
          "reference_end_line": 0
        }
      ]
    },
    {
      "name": "MCPSession",
      "description": "Represents a communication session within the MCP framework. It encapsulates a `BaseConnector` and manages the lifecycle of a connection, including connecting, disconnecting, and initializing the session through its contained connector. **Note: Contrary to previous feedback, `MCPSession` does not inherit from `BaseAgent`.**",
      "referenced_source_code": [
        {
          "qualified_name": "mcp_use.session.MCPSession",
          "reference_file": "/mnt/e/StartUp/mcp-use/mcp_use/session.py",
          "reference_start_line": 0,
          "reference_end_line": 0
        }
      ]
    },
    {
      "name": "MCPAgent",
      "description": "The core LLM agent component that performs actions and interacts with its environment. It interacts with the communication layer by either directly using a list of `BaseConnector` instances or by leveraging an `MCPClient` to manage and access `MCPSession`s (and their underlying `BaseConnector`s). It uses these connectors to interact with tools or external services.",
      "referenced_source_code": [
        {
          "qualified_name": "mcp_use.agents.mcpagent.MCPAgent",
          "reference_file": "/mnt/e/StartUp/mcp-use/mcp_use/agents/mcpagent.py",
          "reference_start_line": 0,
          "reference_end_line": 0
        }
      ]
    },
    {
      "name": "ServerManager",
      "description": "Responsible for managing connections to various MCP servers. It leverages an `MCPClient` to discover, connect to, and retrieve tools from different servers. It indirectly interacts with `BaseConnector` instances by obtaining them from `MCPSession` objects provided by the `MCPClient`. **It does not directly leverage `ConnectionManager`.**",
      "referenced_source_code": [
        {
          "qualified_name": "mcp_use.managers.server_manager.ServerManager",
          "reference_file": "/mnt/e/StartUp/mcp-use/mcp_use/managers/server_manager.py",
          "reference_start_line": 16,
          "reference_end_line": 89
        }
      ]
    }
  ],
  "components_relations": [
    {
      "relation": "extends",
      "src_name": "Concrete Connectors",
      "dst_name": "BaseConnector"
    },
    {
      "relation": "extends",
      "src_name": "Concrete Connection Managers",
      "dst_name": "ConnectionManager"
    },
    {
      "relation": "utilizes",
      "src_name": "Concrete Connection Managers",
      "dst_name": "Concrete Connectors"
    },
    {
      "relation": "interacts with",
      "src_name": "MCPSession",
      "dst_name": "BaseConnector"
    },
    {
      "relation": "utilizes",
      "src_name": "MCPAgent",
      "dst_name": "MCPSession"
    },
    {
      "relation": "indirectly leverages",
      "src_name": "ServerManager",
      "dst_name": "BaseConnector"
    },
    {
      "relation": "no direct leverage of",
      "src_name": "ServerManager",
      "dst_name": "ConnectionManager"
    }
  ]
}
