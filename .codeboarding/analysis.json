{
  "description": "The `mcp-use` project is architected as a modular agent-based system for interacting with MCP servers. It begins with `Project Initialization & Configuration`, which sets up the environment and configures the `Client & Session Management` component. This client then establishes and manages connections through a flexible `Connector Layer`, which abstracts various MCP server implementations. Asynchronous operations, such as processing event streams and managing connection lifecycles, are handled by `Asynchronous Task Management`. The core intelligence resides in `Agent Core & Orchestration`, responsible for LLM interactions and coordinating external tools. `Tool Management & Adaptation` discovers, adapts, and provides these tools to the agent, often retrieving definitions via the `Connector Layer`. Throughout the system's operation, `Observability & Telemetry` monitors execution, collects metrics, and provides feedback, ensuring a robust and traceable agent experience.",
  "components": [
    {
      "name": "Project Initialization & Configuration",
      "description": "Manages the project lifecycle, including command-line interactions, project setup, and loading environmental and connector configurations.",
      "referenced_source_code": [
        {
          "qualified_name": "mcp_use.cli",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/mcp-use/mcp_use/cli.py",
          "reference_start_line": 1,
          "reference_end_line": 1
        },
        {
          "qualified_name": "mcp_use.config",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/mcp-use/mcp_use/config.py",
          "reference_start_line": 1,
          "reference_end_line": 1
        }
      ],
      "can_expand": true
    },
    {
      "name": "Client & Session Management",
      "description": "Oversees the establishment, maintenance, and termination of client connections to MCP servers, managing the overall user session.",
      "referenced_source_code": [
        {
          "qualified_name": "mcp_use.client",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/mcp-use/mcp_use/client.py",
          "reference_start_line": 1,
          "reference_end_line": 1
        },
        {
          "qualified_name": "mcp_use.session",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/mcp-use/mcp_use/session.py",
          "reference_start_line": 1,
          "reference_end_line": 1
        }
      ],
      "can_expand": true
    },
    {
      "name": "Connector Layer",
      "description": "An abstract and concrete layer defining how the system interacts with different MCP server implementations (e.g., Sandbox, WebSocket, HTTP, Stdio).",
      "referenced_source_code": [
        {
          "qualified_name": "mcp_use.connectors.base",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/mcp-use/mcp_use/connectors/base.py",
          "reference_start_line": 1,
          "reference_end_line": 1
        },
        {
          "qualified_name": "mcp_use.connectors.sandbox",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/mcp-use/mcp_use/connectors/sandbox.py",
          "reference_start_line": 1,
          "reference_end_line": 1
        },
        {
          "qualified_name": "mcp_use.connectors.websocket",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/mcp-use/mcp_use/connectors/websocket.py",
          "reference_start_line": 1,
          "reference_end_line": 1
        },
        {
          "qualified_name": "mcp_use.connectors.http",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/mcp-use/mcp_use/connectors/http.py",
          "reference_start_line": 1,
          "reference_end_line": 1
        },
        {
          "qualified_name": "mcp_use.connectors.stdio",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/mcp-use/mcp_use/connectors/stdio.py",
          "reference_start_line": 1,
          "reference_end_line": 1
        }
      ],
      "can_expand": true
    },
    {
      "name": "Agent Core & Orchestration",
      "description": "The central component responsible for LLM interaction, reasoning, dynamic prompt construction, and coordinating the utilization of external tools.",
      "referenced_source_code": [
        {
          "qualified_name": "mcp_use.agents.base",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/mcp-use/mcp_use/agents/base.py",
          "reference_start_line": 1,
          "reference_end_line": 1
        },
        {
          "qualified_name": "mcp_use.agents.mcpagent",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/mcp-use/mcp_use/agents/mcpagent.py",
          "reference_start_line": 1,
          "reference_end_line": 1
        },
        {
          "qualified_name": "mcp_use.agents.prompts.system_prompt_builder",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/mcp-use/mcp_use/agents/prompts/system_prompt_builder.py",
          "reference_start_line": 1,
          "reference_end_line": 1
        },
        {
          "qualified_name": "mcp_use.agents.prompts.templates",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/mcp-use/mcp_use/agents/prompts/templates.py",
          "reference_start_line": 1,
          "reference_end_line": 1
        }
      ],
      "can_expand": true
    },
    {
      "name": "Tool Management & Adaptation",
      "description": "Discovers, indexes, and provides access to various tools (server-managed, search-enabled) and translates MCP-defined tools into formats compatible with external frameworks like LangChain.",
      "referenced_source_code": [
        {
          "qualified_name": "mcp_use.managers.server_manager",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/mcp-use/mcp_use/managers/server_manager.py",
          "reference_start_line": 1,
          "reference_end_line": 1
        },
        {
          "qualified_name": "mcp_use.managers.tools.base_tool",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/mcp-use/mcp_use/managers/tools/base_tool.py",
          "reference_start_line": 1,
          "reference_end_line": 1
        },
        {
          "qualified_name": "mcp_use.adapters.base",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/mcp-use/mcp_use/adapters/base.py",
          "reference_start_line": 1,
          "reference_end_line": 1
        },
        {
          "qualified_name": "mcp_use.adapters.langchain_adapter",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/mcp-use/mcp_use/adapters/langchain_adapter.py",
          "reference_start_line": 1,
          "reference_end_line": 1
        }
      ],
      "can_expand": true
    },
    {
      "name": "Asynchronous Task Management",
      "description": "Manages background tasks, particularly those related to maintaining persistent connections, processing event streams from connectors, and handling asynchronous operations.",
      "referenced_source_code": [
        {
          "qualified_name": "mcp_use.task_managers.base",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/mcp-use/mcp_use/task_managers/base.py",
          "reference_start_line": 1,
          "reference_end_line": 1
        },
        {
          "qualified_name": "mcp_use.task_managers.stdio",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/mcp-use/mcp_use/task_managers/stdio.py",
          "reference_start_line": 1,
          "reference_end_line": 1
        },
        {
          "qualified_name": "mcp_use.task_managers.websocket",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/mcp-use/mcp_use/task_managers/websocket.py",
          "reference_start_line": 1,
          "reference_end_line": 1
        },
        {
          "qualified_name": "mcp_use.task_managers.sse",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/mcp-use/mcp_use/task_managers/sse.py",
          "reference_start_line": 1,
          "reference_end_line": 1
        },
        {
          "qualified_name": "mcp_use.task_managers.streamable_http",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/mcp-use/mcp_use/task_managers/streamable_http.py",
          "reference_start_line": 1,
          "reference_end_line": 1
        }
      ],
      "can_expand": true
    },
    {
      "name": "Observability & Telemetry",
      "description": "Provides mechanisms for monitoring agent execution, collecting performance metrics, and managing callbacks for external integrations and debugging.",
      "referenced_source_code": [
        {
          "qualified_name": "mcp_use.telemetry.telemetry",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/mcp-use/mcp_use/telemetry/telemetry.py",
          "reference_start_line": 1,
          "reference_end_line": 1
        },
        {
          "qualified_name": "mcp_use.telemetry.events",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/mcp-use/mcp_use/telemetry/events.py",
          "reference_start_line": 1,
          "reference_end_line": 1
        },
        {
          "qualified_name": "mcp_use.observability.callbacks_manager",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/mcp-use/mcp_use/observability/callbacks_manager.py",
          "reference_start_line": 1,
          "reference_end_line": 1
        },
        {
          "qualified_name": "mcp_use.observability.laminar",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/mcp-use/mcp_use/observability/laminar.py",
          "reference_start_line": 1,
          "reference_end_line": 1
        },
        {
          "qualified_name": "mcp_use.observability.langfuse",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/mcp-use/mcp_use/observability/langfuse.py",
          "reference_start_line": 1,
          "reference_end_line": 1
        }
      ],
      "can_expand": true
    }
  ],
  "components_relations": [
    {
      "relation": "Configures Client",
      "src_name": "Project Initialization & Configuration",
      "dst_name": "Client & Session Management"
    },
    {
      "relation": "Initiates and Manages Connections",
      "src_name": "Client & Session Management",
      "dst_name": "Connector Layer"
    },
    {
      "relation": "Provides Connection Streams",
      "src_name": "Connector Layer",
      "dst_name": "Asynchronous Task Management"
    },
    {
      "relation": "Manages Connection Lifecycle",
      "src_name": "Asynchronous Task Management",
      "dst_name": "Connector Layer"
    },
    {
      "relation": "Requests Tools",
      "src_name": "Agent Core & Orchestration",
      "dst_name": "Tool Management & Adaptation"
    },
    {
      "relation": "Provides Adapted Tools",
      "src_name": "Tool Management & Adaptation",
      "dst_name": "Agent Core & Orchestration"
    },
    {
      "relation": "Retrieves Tool Definitions",
      "src_name": "Tool Management & Adaptation",
      "dst_name": "Connector Layer"
    },
    {
      "relation": "Sends Execution Data",
      "src_name": "Agent Core & Orchestration",
      "dst_name": "Observability & Telemetry"
    },
    {
      "relation": "Provides Callbacks/Metrics",
      "src_name": "Observability & Telemetry",
      "dst_name": "Agent Core & Orchestration"
    }
  ]
}
