{
  "description": "The LLM Integration & Prompting subsystem is responsible for constructing and managing the prompts sent to Large Language Models. Its boundaries encompass the storage of prompt templates, the dynamic generation of tool descriptions, and the final assembly of the system prompt.",
  "components": [
    {
      "name": "PromptTemplateStore",
      "description": "Manages and provides access to predefined system prompt templates, acting as a centralized repository for various prompt structures. This component ensures consistency and configurability in prompt generation, aligning with the \"Configuration-Driven\" and \"Modular Design\" architectural patterns.",
      "referenced_source_code": [
        {
          "qualified_name": "PromptTemplateStore",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/mcp-use/mcp_use/agents/prompts/templates.py",
          "reference_start_line": 1,
          "reference_end_line": 1
        }
      ],
      "can_expand": true
    },
    {
      "name": "ToolDescriptionGenerator",
      "description": "Dynamically generates and formats descriptions of the tools available to the agent, including logic for handling disallowed tools. This is critical for the \"Tool Abstraction and Registry\" pattern, enabling the LLM to accurately understand and utilize its capabilities.",
      "referenced_source_code": [
        {
          "qualified_name": "generate_tool_descriptions",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/mcp-use/mcp_use/agents/prompts/system_prompt_builder.py",
          "reference_start_line": 5,
          "reference_end_line": 25
        }
      ],
      "can_expand": false
    },
    {
      "name": "SystemPromptBuilder",
      "description": "The orchestrating component responsible for constructing the complete system prompt. It selects appropriate base templates, integrates dynamically generated tool descriptions, and incorporates additional instructions. This component directly embodies the \"LLM Integration Layer\" by preparing the final input for the AI model.",
      "referenced_source_code": [
        {
          "qualified_name": "SystemPromptBuilder",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/mcp-use/mcp_use/agents/prompts/system_prompt_builder.py",
          "reference_start_line": 1,
          "reference_end_line": 1
        }
      ],
      "can_expand": true
    }
  ],
  "components_relations": [
    {
      "relation": "Supplies templates to",
      "src_name": "PromptTemplateStore",
      "dst_name": "SystemPromptBuilder"
    },
    {
      "relation": "Delivers formatted tool descriptions to",
      "src_name": "ToolDescriptionGenerator",
      "dst_name": "SystemPromptBuilder"
    },
    {
      "relation": "Depends on",
      "src_name": "SystemPromptBuilder",
      "dst_name": "PromptTemplateStore"
    },
    {
      "relation": "Utilizes",
      "src_name": "SystemPromptBuilder",
      "dst_name": "ToolDescriptionGenerator"
    }
  ]
}
