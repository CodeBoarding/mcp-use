{
  "description": "The `Agent Core` subsystem is the central orchestrator within the `mcp-use` framework, responsible for the agent's decision-making, lifecycle, and overall execution flow. It integrates various components to interact with the external environment and manage its operational state.",
  "components": [
    {
      "name": "Agent Core",
      "description": "The primary intelligence and orchestration unit. It manages the agent's lifecycle, decision-making processes, and coordinates interactions with other components to execute tasks and communicate with external services.",
      "referenced_source_code": [
        {
          "qualified_name": "mcp_use.agents.mcpagent.MCPAgent",
          "reference_file": "/mnt/e/StartUp/mcp-use/mcp_use/agents/mcpagent.py",
          "reference_start_line": 1,
          "reference_end_line": 1
        }
      ]
    },
    {
      "name": "Base Agent",
      "description": "Provides the foundational structure and common functionalities for all agents within the framework. It serves as an abstract base class that `Agent Core` extends.",
      "referenced_source_code": [
        {
          "qualified_name": "mcp_use.agents.base.BaseAgent",
          "reference_file": "/mnt/e/StartUp/mcp-use/mcp_use/agents/base.py",
          "reference_start_line": 1,
          "reference_end_line": 1
        }
      ]
    },
    {
      "name": "MCP Server Registry/Connector",
      "description": "Manages connections and interactions with various MCP (Multi-Agent Communication Protocol) servers. It acts as an interface for the `Agent Core` to discover and communicate with available services.",
      "referenced_source_code": [
        {
          "qualified_name": "mcp_use.managers.server_manager.ServerManager",
          "reference_file": "/mnt/e/StartUp/mcp-use/mcp_use/managers/server_manager.py",
          "reference_start_line": 16,
          "reference_end_line": 89
        }
      ]
    },
    {
      "name": "LLM Integration Layer",
      "description": "Facilitates the processing of outputs from Large Language Models (LLMs) and integrates with LangChain-based tools. It acts as an adapter, translating agent requests into LLM-compatible formats and vice-versa.",
      "referenced_source_code": [
        {
          "qualified_name": "mcp_use.adapters.langchain_adapter.LangChainAdapter",
          "reference_file": "/mnt/e/StartUp/mcp-use/mcp_use/adapters/langchain_adapter.py",
          "reference_start_line": 1,
          "reference_end_line": 1
        }
      ]
    },
    {
      "name": "Telemetry",
      "description": "Responsible for emitting telemetry events, providing insights into the agent's operational status, performance, and interactions. This component supports observability within the `Agent Core` subsystem.",
      "referenced_source_code": [
        {
          "qualified_name": "mcp_use.telemetry.telemetry.Telemetry",
          "reference_file": "/mnt/e/StartUp/mcp-use/mcp_use/telemetry/telemetry.py",
          "reference_start_line": 55,
          "reference_end_line": 305
        }
      ]
    },
    {
      "name": "MCP Session",
      "description": "Manages the state and context of an agent's session. It encapsulates session-specific data and provides mechanisms for maintaining continuity across interactions.",
      "referenced_source_code": [
        {
          "qualified_name": "mcp_use.session.MCPSession",
          "reference_file": "/mnt/e/StartUp/mcp-use/mcp_use/session.py",
          "reference_start_line": 1,
          "reference_end_line": 1
        }
      ]
    }
  ],
  "components_relations": [
    {
      "relation": "uses",
      "src_name": "Agent Core",
      "dst_name": "MCP Server Registry/Connector"
    },
    {
      "relation": "uses",
      "src_name": "Agent Core",
      "dst_name": "LLM Integration Layer"
    },
    {
      "relation": "uses",
      "src_name": "Agent Core",
      "dst_name": "Telemetry"
    },
    {
      "relation": "is related to",
      "src_name": "Agent Core",
      "dst_name": "MCP Session"
    },
    {
      "relation": "inherits from",
      "src_name": "Agent Core",
      "dst_name": "Base Agent"
    }
  ]
}
