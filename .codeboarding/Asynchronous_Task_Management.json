{
  "description": "The `Asynchronous Task Management` subsystem is critical for the `mcp-use` project, an LLM Agent Framework/Library, as it provides the foundational mechanisms for agents to interact with various communication channels asynchronously. This aligns with the project's architectural bias towards extensibility and modularity, allowing different transport layers to be plugged in seamlessly.",
  "components": [
    {
      "name": "BaseTaskManager",
      "description": "Defines the abstract interface and core lifecycle management for asynchronous connections and background tasks. It provides a common structure for establishing, maintaining, and closing connections, acting as the blueprint for all specific task managers.",
      "referenced_source_code": [
        {
          "qualified_name": "mcp_use.task_managers.base.BaseTaskManager",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/mcp-use/mcp_use/task_managers/base.py",
          "reference_start_line": 1,
          "reference_end_line": 1
        }
      ],
      "can_expand": true
    },
    {
      "name": "StdioTaskManager",
      "description": "Manages asynchronous tasks specifically for standard input/output (stdio) streams, enabling console-based communication for agents. This is crucial for local development, debugging, and simple interactive agent sessions.",
      "referenced_source_code": [
        {
          "qualified_name": "mcp_use.task_managers.stdio.StdioTaskManager",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/mcp-use/mcp_use/task_managers/stdio.py",
          "reference_start_line": 1,
          "reference_end_line": 1
        }
      ],
      "can_expand": false
    },
    {
      "name": "WebSocketTaskManager",
      "description": "Manages asynchronous tasks for WebSocket connections, facilitating persistent, full-duplex communication channels for agents. This is vital for real-time, interactive agent-to-agent or agent-to-client communication.",
      "referenced_source_code": [
        {
          "qualified_name": "mcp_use.task_managers.websocket.WebSocketTaskManager",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/mcp-use/mcp_use/task_managers/websocket.py",
          "reference_start_line": 1,
          "reference_end_line": 1
        }
      ],
      "can_expand": true
    },
    {
      "name": "SseTaskManager",
      "description": "Manages asynchronous tasks for Server-Sent Events (SSE), enabling agents to receive continuous event streams from a server. This is useful for one-way, server-initiated updates or notifications to agents.",
      "referenced_source_code": [
        {
          "qualified_name": "mcp_use.task_managers.sse.SseTaskManager",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/mcp-use/mcp_use/task_managers/sse.py",
          "reference_start_line": 1,
          "reference_end_line": 1
        }
      ],
      "can_expand": true
    },
    {
      "name": "StreamableHttpTaskManager",
      "description": "Manages asynchronous tasks for streamable HTTP connections, allowing for long-lived HTTP requests that continuously stream data, potentially for agent communication or data ingestion. This supports scenarios requiring continuous data flow over HTTP without full-duplex WebSockets.",
      "referenced_source_code": [
        {
          "qualified_name": "mcp_use.task_managers.streamable_http.StreamableHttpTaskManager",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/mcp-use/mcp_use/task_managers/streamable_http.py",
          "reference_start_line": 1,
          "reference_end_line": 1
        }
      ],
      "can_expand": true
    }
  ],
  "components_relations": [
    {
      "relation": "defines contract for",
      "src_name": "BaseTaskManager",
      "dst_name": "StdioTaskManager"
    },
    {
      "relation": "defines contract for",
      "src_name": "BaseTaskManager",
      "dst_name": "WebSocketTaskManager"
    },
    {
      "relation": "defines contract for",
      "src_name": "BaseTaskManager",
      "dst_name": "SseTaskManager"
    },
    {
      "relation": "defines contract for",
      "src_name": "BaseTaskManager",
      "dst_name": "StreamableHttpTaskManager"
    },
    {
      "relation": "inherits from",
      "src_name": "StdioTaskManager",
      "dst_name": "BaseTaskManager"
    },
    {
      "relation": "inherits from",
      "src_name": "WebSocketTaskManager",
      "dst_name": "BaseTaskManager"
    },
    {
      "relation": "inherits from",
      "src_name": "SseTaskManager",
      "dst_name": "BaseTaskManager"
    },
    {
      "relation": "inherits from",
      "src_name": "StreamableHttpTaskManager",
      "dst_name": "BaseTaskManager"
    }
  ]
}
