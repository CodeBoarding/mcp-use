{
  "description": "The `Tool Adapters` subsystem is responsible for standardizing raw tool definitions into a format consumable by the `Agent Orchestration Core` and `LLM Integration Layer`. It acts as a crucial intermediary, ensuring seamless integration of diverse tools within the LLM agent framework.",
  "components": [
    {
      "name": "Base Adapter Module",
      "description": "Defines the abstract interface (BaseAdapter) and common workflow for creating and loading tools from various connectors. It establishes the contract for how different tool types (generic tools, resources, prompts) should be converted, ensuring extensibility for future adapter implementations.",
      "referenced_source_code": [
        {
          "qualified_name": "BaseAdapter",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/mcp-use/mcp_use/adapters/base.py",
          "reference_start_line": 20,
          "reference_end_line": 190
        }
      ],
      "can_expand": true
    },
    {
      "name": "LangChain Adapter Module",
      "description": "Implements the concrete logic for adapting generic MCP tool definitions (including resources and prompts) into the LangChain framework's tool format. It orchestrates the conversion process, handles schema normalization, and manages result parsing specific to LangChain.",
      "referenced_source_code": [
        {
          "qualified_name": "LangChain Adapter Module",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/mcp-use/mcp_use/adapters/langchain_adapter.py",
          "reference_start_line": 1,
          "reference_end_line": 1
        }
      ],
      "can_expand": true
    },
    {
      "name": "McpToLangChainAdapter",
      "description": "Directly translates a raw MCP tool definition (containing name, description, and input schema) into a structured LangChain `Tool` object, making it compatible with LangChain agents and the LLM Integration Layer. It's the core translation engine.",
      "referenced_source_code": [
        {
          "qualified_name": "McpToLangChainAdapter",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/mcp-use/mcp_use/adapters/langchain_adapter.py",
          "reference_start_line": 119,
          "reference_end_line": 168
        }
      ],
      "can_expand": false
    },
    {
      "name": "ResourceTool",
      "description": "Represents and encapsulates an external resource (e.g., a file, a service endpoint) as a LangChain-compatible tool. This allows agents to interact with and leverage various resources through a standardized LangChain tool interface.",
      "referenced_source_code": [
        {
          "qualified_name": "ResourceTool",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/mcp-use/mcp_use/adapters/langchain_adapter.py",
          "reference_start_line": 182,
          "reference_end_line": 209
        }
      ],
      "can_expand": false
    },
    {
      "name": "PromptTool",
      "description": "Represents and encapsulates a dynamic prompt or prompt template as a LangChain-compatible tool. This enables agents to dynamically access, manage, and utilize prompts within the LangChain framework, supporting flexible prompt engineering.",
      "referenced_source_code": [
        {
          "qualified_name": "PromptTool",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/mcp-use/mcp_use/adapters/langchain_adapter.py",
          "reference_start_line": 247,
          "reference_end_line": 266
        }
      ],
      "can_expand": false
    },
    {
      "name": "fix_schema",
      "description": "A utility function that normalizes and adjusts the input schema of tool definitions. Its purpose is to resolve any discrepancies and ensure the schema is compatible with LangChain's expected format, preventing parsing errors during tool invocation.",
      "referenced_source_code": [
        {
          "qualified_name": "fix_schema",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/mcp-use/mcp_use/adapters/langchain_adapter.py",
          "reference_start_line": 41,
          "reference_end_line": 56
        }
      ],
      "can_expand": false
    },
    {
      "name": "_parse_mcp_tool_result",
      "description": "Processes and parses the raw output received from an adapted MCP tool after its execution. It converts this output into a structured and usable format suitable for consumption by the Agent Orchestration Core or the LLM Integration Layer.",
      "referenced_source_code": [
        {
          "qualified_name": "_parse_mcp_tool_result",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/mcp-use/mcp_use/adapters/langchain_adapter.py",
          "reference_start_line": 58,
          "reference_end_line": 100
        }
      ],
      "can_expand": false
    }
  ],
  "components_relations": [
    {
      "relation": "implements",
      "src_name": "LangChain Adapter Module",
      "dst_name": "Base Adapter Module"
    },
    {
      "relation": "utilizes",
      "src_name": "LangChain Adapter Module",
      "dst_name": "McpToLangChainAdapter"
    },
    {
      "relation": "instantiates",
      "src_name": "LangChain Adapter Module",
      "dst_name": "ResourceTool"
    },
    {
      "relation": "instantiates",
      "src_name": "LangChain Adapter Module",
      "dst_name": "PromptTool"
    },
    {
      "relation": "calls",
      "src_name": "LangChain Adapter Module",
      "dst_name": "fix_schema"
    },
    {
      "relation": "calls",
      "src_name": "LangChain Adapter Module",
      "dst_name": "_parse_mcp_tool_result"
    }
  ]
}
