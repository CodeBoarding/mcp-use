{
  "description": "The `mcp-use` agent subsystem is orchestrated by the `McPAgent`, which acts as the central control unit for building and managing LangChain-based conversational agents. It leverages a `LangChain Adapter` to seamlessly integrate various MCP-defined components (tools, resources, prompts) into the LangChain framework. The `McPAgent` interacts with a `LangChain Agent Builder` to construct the agent, a `Tool Integration Handler` for managing tool definitions, a `Prompt Engineering Manager` for dynamic prompt generation, and a `Conversation History Manager` to maintain context. Finally, an `Output Parser/Formatter` processes the agent's responses, ensuring structured and validated output. This architecture emphasizes modularity and adaptability, allowing for flexible agent configurations and interactions with diverse external capabilities.",
  "components": [
    {
      "name": "McPAgent",
      "description": "The central orchestrator of the agent's lifecycle, responsible for initialization, tool integration, prompt management, conversation history, and output processing. It coordinates interactions between various sub-components to create and manage the LangChain agent.",
      "referenced_source_code": [
        {
          "qualified_name": "mcp_use.agents.mcpagent.McPAgent",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/mcp-use/mcp_use/agents/mcpagent.py",
          "reference_start_line": 48,
          "reference_end_line": 1095
        },
        {
          "qualified_name": "mcp_use.agents.mcpagent.McPAgent:_create_agent",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/mcp-use/mcp_use/agents/mcpagent.py",
          "reference_start_line": 239,
          "reference_end_line": 275
        },
        {
          "qualified_name": "mcp_use.agents.mcpagent.McPAgent:_create_system_message_from_tools",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/mcp-use/mcp_use/agents/mcpagent.py",
          "reference_start_line": 216,
          "reference_end_line": 237
        },
        {
          "qualified_name": "mcp_use.agents.mcpagent.McPAgent:set_system_message",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/mcp-use/mcp_use/agents/mcpagent.py",
          "reference_start_line": 310,
          "reference_end_line": 330
        },
        {
          "qualified_name": "mcp_use.agents.mcpagent.McPAgent:_attempt_structured_output",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/mcp-use/mcp_use/agents/mcpagent.py",
          "reference_start_line": 871,
          "reference_end_line": 904
        },
        {
          "qualified_name": "mcp_use.agents.mcpagent.McPAgent:add_to_history",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/mcp-use/mcp_use/agents/mcpagent.py",
          "reference_start_line": 293,
          "reference_end_line": 300
        },
        {
          "qualified_name": "mcp_use.agents.mcpagent.McPAgent:_enhance_query_with_schema",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/mcp-use/mcp_use/agents/mcpagent.py",
          "reference_start_line": 906,
          "reference_end_line": 933
        }
      ],
      "can_expand": true
    },
    {
      "name": "LangChain Adapter",
      "description": "Adapts MCP tools, resources, and prompts into LangChain-compatible formats, enabling their seamless integration within the LangChain agent. It handles schema conversions and ensures proper execution of MCP components within the LangChain framework.",
      "referenced_source_code": [
        {
          "qualified_name": "mcp_use.adapters.langchain_adapter.LangChainAdapter",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/mcp-use/mcp_use/adapters/langchain_adapter.py",
          "reference_start_line": 29,
          "reference_end_line": 268
        }
      ],
      "can_expand": true
    },
    {
      "name": "LangChain Agent Builder",
      "description": "Responsible for constructing and configuring the core LangChain agent instance. This involves assembling the chosen LLM, integrated tools, dynamic prompt templates, and other LangChain runnables into a cohesive, executable agent.",
      "referenced_source_code": [
        {
          "qualified_name": "mcp_use.agents.mcpagent.McPAgent:_create_agent",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/mcp-use/mcp_use/agents/mcpagent.py",
          "reference_start_line": 239,
          "reference_end_line": 275
        }
      ],
      "can_expand": true
    },
    {
      "name": "Tool Integration Handler",
      "description": "Manages the integration of external tools with the LangChain agent. This includes converting tool definitions into a format compatible with LangChain and generating structured tool schemas that can be incorporated into prompts for enhanced LLM reasoning.",
      "referenced_source_code": [
        {
          "qualified_name": "mcp_use.agents.mcpagent.McPAgent:_create_system_message_from_tools",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/mcp-use/mcp_use/agents/mcpagent.py",
          "reference_start_line": 216,
          "reference_end_line": 237
        },
        {
          "qualified_name": "mcp_use.agents.mcpagent.McPAgent:_enhance_query_with_schema",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/mcp-use/mcp_use/agents/mcpagent.py",
          "reference_start_line": 906,
          "reference_end_line": 933
        }
      ],
      "can_expand": false
    },
    {
      "name": "Prompt Engineering Manager",
      "description": "Dynamically generates and manages the system prompts, few-shot examples, and other prompt elements required by the LLM. It incorporates tool schemas, conversation history, and specific instructions to guide the LLM's behavior and reasoning.",
      "referenced_source_code": [
        {
          "qualified_name": "mcp_use.agents.mcpagent.McPAgent:set_system_message",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/mcp-use/mcp_use/agents/mcpagent.py",
          "reference_start_line": 310,
          "reference_end_line": 330
        },
        {
          "qualified_name": "mcp_use.agents.mcpagent.McPAgent:_create_system_message_from_tools",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/mcp-use/mcp_use/agents/mcpagent.py",
          "reference_start_line": 216,
          "reference_end_line": 237
        }
      ],
      "can_expand": true
    },
    {
      "name": "Output Parser/Formatter",
      "description": "Post-processes the raw output received from the LangChain agent. Its responsibilities include parsing the LLM's response into expected structured formats (e.g., JSON), performing validation, and handling potential errors or malformed outputs to ensure reliable data flow.",
      "referenced_source_code": [
        {
          "qualified_name": "mcp_use.agents.mcpagent.McPAgent:_attempt_structured_output",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/mcp-use/mcp_use/agents/mcpagent.py",
          "reference_start_line": 871,
          "reference_end_line": 904
        }
      ],
      "can_expand": false
    },
    {
      "name": "Conversation History Manager (LangChain specific)",
      "description": "Manages the ongoing conversation history in a format compatible with LangChain's agent. It ensures that context is accurately maintained and provided to the LLM across multiple turns, facilitating coherent and stateful interactions.",
      "referenced_source_code": [
        {
          "qualified_name": "mcp_use.agents.mcpagent.McPAgent:add_to_history",
          "reference_file": "/home/ubuntu/CodeBoarding/repo/mcp-use/mcp_use/agents/mcpagent.py",
          "reference_start_line": 293,
          "reference_end_line": 300
        }
      ],
      "can_expand": true
    }
  ],
  "components_relations": [
    {
      "relation": "orchestrates",
      "src_name": "McPAgent",
      "dst_name": "LangChain Agent Builder"
    },
    {
      "relation": "manages",
      "src_name": "McPAgent",
      "dst_name": "Tool Integration Handler"
    },
    {
      "relation": "manages",
      "src_name": "McPAgent",
      "dst_name": "Prompt Engineering Manager"
    },
    {
      "relation": "manages",
      "src_name": "McPAgent",
      "dst_name": "Conversation History Manager (LangChain specific)"
    },
    {
      "relation": "processes output via",
      "src_name": "McPAgent",
      "dst_name": "Output Parser/Formatter"
    },
    {
      "relation": "utilizes",
      "src_name": "LangChain Agent Builder",
      "dst_name": "LangChain Adapter"
    },
    {
      "relation": "provides tool schemas to",
      "src_name": "Tool Integration Handler",
      "dst_name": "Prompt Engineering Manager"
    },
    {
      "relation": "provides adapted tools to",
      "src_name": "Tool Integration Handler",
      "dst_name": "LangChain Agent Builder"
    },
    {
      "relation": "generates prompts for",
      "src_name": "Prompt Engineering Manager",
      "dst_name": "LangChain Agent Builder"
    },
    {
      "relation": "provides context to",
      "src_name": "Conversation History Manager (LangChain specific)",
      "dst_name": "Prompt Engineering Manager"
    },
    {
      "relation": "provides history to",
      "src_name": "Conversation History Manager (LangChain specific)",
      "dst_name": "LangChain Agent Builder"
    },
    {
      "relation": "adapts components for",
      "src_name": "LangChain Adapter",
      "dst_name": "Tool Integration Handler"
    }
  ]
}
